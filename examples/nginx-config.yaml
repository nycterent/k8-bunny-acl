# Example Nginx configuration with Bunny CDN trusted proxies
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-bunny-config
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        # Set real IP from trusted proxies
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;
        
        # Include trusted proxy IPs (generated by init container)
        include /etc/nginx/conf.d/bunny-proxies.conf;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" real_ip="$realip_remote_addr"';
        
        access_log /var/log/nginx/access.log main;
        
        server {
            listen 80;
            server_name _;
            
            location / {
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-with-bunny-ips
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-bunny
  template:
    metadata:
      labels:
        app: nginx-bunny
    spec:
      initContainers:
      - name: generate-nginx-config
        image: alpine:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Generating Nginx configuration with Bunny CDN IPs..."
          
          # Read trusted IPs from ConfigMap
          TRUSTED_IPS="$BUNNY_IPS"
          
          # Generate set_real_ip_from directives
          echo "# Generated at $(date)" > /shared/bunny-proxies.conf
          echo "# Bunny CDN trusted proxy IPs" >> /shared/bunny-proxies.conf
          
          IFS=',' read -ra IP_ARRAY <<< "$TRUSTED_IPS"
          for ip in "${IP_ARRAY[@]}"; do
              ip=$(echo "$ip" | tr -d ' ')
              if [ -n "$ip" ]; then
                  echo "set_real_ip_from $ip;" >> /shared/bunny-proxies.conf
              fi
          done
          
          echo "Generated configuration for $(echo "$TRUSTED_IPS" | tr ',' '\n' | wc -l) IPs"
        env:
        - name: BUNNY_IPS
          valueFrom:
            configMapKeyRef:
              name: bunny-trusted-ips
              key: trusted_ips
        volumeMounts:
        - name: shared-config
          mountPath: /shared
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: shared-config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-bunny-config
      - name: shared-config
        emptyDir: {}
